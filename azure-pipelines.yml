# Azure DevOps Pipeline for Elite Realty Static Web App
trigger:
- main
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  webAppName: 'elite-realty-app' # Change this to your Azure App Service name

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    
    # Checkout source code
    - checkout: self
      displayName: 'Checkout Repository'
    
    # Copy files to staging directory
    - task: CopyFiles@2
      displayName: 'Copy Application Files'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          **/*.html
          **/*.css
          **/*.js
          **/*.md
          !node_modules/**
          !.git/**
          !azure-pipelines.yml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
    
    # Create web.config for Azure App Service
    - task: FileTransform@1
      displayName: 'Generate web.config'
      inputs:
        folderPath: '$(Build.ArtifactStagingDirectory)'
        fileType: 'xml'
        targetFiles: 'web.config'
    
    # Publish build artifacts
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'elite-realty-drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          
          # Download build artifacts
          - download: current
            artifact: elite-realty-drop
            displayName: 'Download Build Artifacts'
          
          # Deploy to Azure App Service
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: 'Azure-Service-Connection' # Update with your service connection name
              appType: 'webApp'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/elite-realty-drop'
              deploymentMethod: 'auto' 